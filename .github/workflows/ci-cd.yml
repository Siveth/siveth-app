name: PWA CI/CD Workflow

# Configuración de los desencadenadores
on:
  push:
    branches:
      - master
      
  pull_request:
    branches:
      - master
      
  workflow_dispatch:

# Definición de los trabajos (jobs)
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout del código fuente
      - name: Checkout código
        uses: actions/checkout@v4.2.1

      # Instalación de dependencias necesarias para Chrome headless
      - name: Instalar dependencias necesarias para Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libgconf-2-4 \
            libxss1 \
            libxi6 \
            libgdk-pixbuf2.0-0 \
            libgtk-3-0 \
            xvfb \
            fonts-liberation \
            libappindicator3-1 \
            libasound2

      # Configuración de Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.X'  # Especifica la versión de Node.js

      # Instalación de dependencias
      - name: Instalar dependencias
        run: |
          npm ci --legacy-peer-deps
          npm install -g testcafe --legacy-peer-deps  # Instala TestCafe globalmente

      # Ejecutar pruebas de TestCafe en modo headless con Xvfb
      - name: Ejecutar pruebas de TestCafe
        run: |
          xvfb-run -a npx testcafe chrome:headless tests/test.js --debug-on-fail # Asegúrate de que la ruta de test.js sea correcta

      # (Opcional) Paso para desplegar la aplicación
      - name: Desplegar aplicación
        run: |
          echo "Desplegando la aplicación..."
          # Aquí iría el comando de despliegue, usando las variables de entorno necesarias